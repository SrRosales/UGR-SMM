/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package P7_Paint;

import java.awt.Color;
import java.awt.Cursor;
import javax.swing.JColorChooser;
import sm.arc.iu.Lienzo2D;
import sm.arc.graficos.MiShape;
import sm.arc.graficos.MiLinea;
import sm.arc.graficos.MiElipse;
import sm.arc.graficos.MiRectangulo;
import sm.arc.graficos.MiFantasma;

/**
 *
 * @author Alejandro Rosales Cantero
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }
    
    // Crear los diferentes tipos de cursor
    Cursor cursorPintar = new Cursor(Cursor.CROSSHAIR_CURSOR); // Punto de mira para pintar
    Cursor cursorMover = new Cursor(Cursor.MOVE_CURSOR); // Mano para mover
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        MenuBotones = new javax.swing.ButtonGroup();
        MenuDibujos = new javax.swing.JToolBar();
        BotonLinea = new javax.swing.JToggleButton();
        BotonRectangulo = new javax.swing.JToggleButton();
        BotonElipse = new javax.swing.JToggleButton();
        BotonFantasma = new javax.swing.JToggleButton();
        BotonMover = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        PanelBotonColores = new javax.swing.JPanel();
        BotonColor = new javax.swing.JButton();
        BotonRelleno = new javax.swing.JToggleButton();
        BotonTransparencia = new javax.swing.JToggleButton();
        BotonAlisar = new javax.swing.JToggleButton();
        SelectorGrosor = new javax.swing.JSlider();
        PanelBarraEstado = new javax.swing.JPanel();
        BarraEstado = new javax.swing.JLabel();
        lienzo2D = new sm.arc.iu.Lienzo2D();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        jMenu2.setText("File");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setSize(new java.awt.Dimension(900, 700));

        MenuDibujos.setBackground(new java.awt.Color(204, 204, 204));
        MenuDibujos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        MenuDibujos.setRollover(true);

        MenuBotones.add(BotonLinea);
        BotonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        BotonLinea.setToolTipText("Botón para pintar Líneas");
        BotonLinea.setFocusable(false);
        BotonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonLinea.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLineaActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonLinea);

        MenuBotones.add(BotonRectangulo);
        BotonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        BotonRectangulo.setToolTipText("Botón para pinta Rectángulos");
        BotonRectangulo.setFocusable(false);
        BotonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRectangulo.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRectanguloActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonRectangulo);

        MenuBotones.add(BotonElipse);
        BotonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        BotonElipse.setToolTipText("Botón para pintar Elipses");
        BotonElipse.setFocusable(false);
        BotonElipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonElipse.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonElipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonElipseActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonElipse);

        MenuBotones.add(BotonFantasma);
        BotonFantasma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/fantasma.png"))); // NOI18N
        BotonFantasma.setToolTipText("Botón para pintar Fantasmas");
        BotonFantasma.setFocusable(false);
        BotonFantasma.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonFantasma.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonFantasma.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonFantasma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonFantasmaActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonFantasma);

        MenuBotones.add(BotonMover);
        BotonMover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        BotonMover.setToolTipText("Botón para mover objetos");
        BotonMover.setFocusable(false);
        BotonMover.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMover.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonMover.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMoverActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonMover);
        MenuDibujos.add(jSeparator1);

        PanelBotonColores.setBackground(new java.awt.Color(204, 204, 204));
        PanelBotonColores.setMaximumSize(new java.awt.Dimension(40, 40));
        PanelBotonColores.setMinimumSize(new java.awt.Dimension(40, 40));
        PanelBotonColores.setPreferredSize(new java.awt.Dimension(40, 40));

        BotonColor.setBackground(new java.awt.Color(0, 0, 0));
        BotonColor.setToolTipText("Botón para cambiar el color de los objetos");
        BotonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBotonColoresLayout = new javax.swing.GroupLayout(PanelBotonColores);
        PanelBotonColores.setLayout(PanelBotonColoresLayout);
        PanelBotonColoresLayout.setHorizontalGroup(
            PanelBotonColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBotonColoresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonColor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        PanelBotonColoresLayout.setVerticalGroup(
            PanelBotonColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBotonColoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotonColor, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        MenuDibujos.add(PanelBotonColores);

        MenuBotones.add(BotonRelleno);
        BotonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenar.png"))); // NOI18N
        BotonRelleno.setToolTipText("Botón para rellenar los objetos");
        BotonRelleno.setFocusable(false);
        BotonRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonRelleno.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRellenoActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonRelleno);

        MenuBotones.add(BotonTransparencia);
        BotonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/transparencia.png"))); // NOI18N
        BotonTransparencia.setToolTipText("Botón para aplicar transparencia a los objetos");
        BotonTransparencia.setFocusable(false);
        BotonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonTransparencia.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonTransparenciaActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonTransparencia);

        MenuBotones.add(BotonAlisar);
        BotonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        BotonAlisar.setToolTipText("Botón para aplicar un alisado a los objetos");
        BotonAlisar.setFocusable(false);
        BotonAlisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonAlisar.setPreferredSize(new java.awt.Dimension(40, 40));
        BotonAlisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonAlisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAlisarActionPerformed(evt);
            }
        });
        MenuDibujos.add(BotonAlisar);

        SelectorGrosor.setToolTipText("Botón para cambiar el grosor de los objetos");
        SelectorGrosor.setValue(0);
        SelectorGrosor.setMaximumSize(new java.awt.Dimension(70, 50));
        SelectorGrosor.setMinimumSize(new java.awt.Dimension(70, 50));
        SelectorGrosor.setPreferredSize(new java.awt.Dimension(70, 50));
        SelectorGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SelectorGrosorStateChanged(evt);
            }
        });
        MenuDibujos.add(SelectorGrosor);

        getContentPane().add(MenuDibujos, java.awt.BorderLayout.PAGE_START);

        PanelBarraEstado.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        BarraEstado.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        BarraEstado.setText("Barra de Estado");

        javax.swing.GroupLayout PanelBarraEstadoLayout = new javax.swing.GroupLayout(PanelBarraEstado);
        PanelBarraEstado.setLayout(PanelBarraEstadoLayout);
        PanelBarraEstadoLayout.setHorizontalGroup(
            PanelBarraEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBarraEstadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BarraEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );
        PanelBarraEstadoLayout.setVerticalGroup(
            PanelBarraEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBarraEstadoLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(BarraEstado))
        );

        getContentPane().add(PanelBarraEstado, java.awt.BorderLayout.PAGE_END);

        lienzo2D.setBackground(new java.awt.Color(255, 255, 255));
        lienzo2D.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lienzo2DMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout lienzo2DLayout = new javax.swing.GroupLayout(lienzo2D);
        lienzo2D.setLayout(lienzo2DLayout);
        lienzo2DLayout.setHorizontalGroup(
            lienzo2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 831, Short.MAX_VALUE)
        );
        lienzo2DLayout.setVerticalGroup(
            lienzo2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );

        getContentPane().add(lienzo2D, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

        jMenu1.setText("Archivo");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Este método se ejecuta cuando se presiona el botón "Línea". Establece el
     * tipo de forma a dibujar como Línea, desactiva el modo mover, actualiza la
     * barra de estado y el cursor.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLineaActionPerformed
        // Establezco el tipo de forma a dibujar como Linea
        this.lienzo2D.setTipoforma(Lienzo2D.tipoOpcion.LINEA);
        
        // Pongo a false mover para poder dibujar
        this.lienzo2D.setMover(false);
        
        // Actualizo la barra de estado para que indique que se esta dibujando una Linea
        BarraEstado.setText("Dibujando Línea...");
        
        // Establecemos el nuevo cursor
        lienzo2D.setCursor(cursorPintar);
    }//GEN-LAST:event_BotonLineaActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Rectángulo".
     * Establece el tipo de forma a dibujar como Rectángulo, desactiva el modo
     * mover, actualiza la barra de estado y el cursor.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRectanguloActionPerformed
        // Establezco el tipo de forma a dibujar como Rectángulo
        this.lienzo2D.setTipoforma(Lienzo2D.tipoOpcion.RECTANGULO);
        
        // Pongo a false mover para poder dibujar
        this.lienzo2D.setMover(false);
        
        // Actualizo la barra de estado para que indique que se esta dibujando un Rectángulo
        BarraEstado.setText("Dibujando Rectángulo...");
        
        // Establecemos el nuevo cursor
        lienzo2D.setCursor(cursorPintar);
    }//GEN-LAST:event_BotonRectanguloActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Elipse". Establece el
     * tipo de forma a dibujar como Elipse, desactiva el modo mover, actualiza
     * la barra de estado y el cursor.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonElipseActionPerformed
        // Establezco el tipo de forma a dibujar como Elipse
        this.lienzo2D.setTipoforma(Lienzo2D.tipoOpcion.ELIPSE);
        
        // Pongo a false mover para poder dibujar
        this.lienzo2D.setMover(false);
        
        // Actualizo la barra de estado para que indique que se esta dibujando una Elipse
        BarraEstado.setText("Dibujando Elipse...");
        
        // Establecemos el nuevo cursor
        lienzo2D.setCursor(cursorPintar);
    }//GEN-LAST:event_BotonElipseActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Fantasma". Establece
     * el tipo de forma a dibujar como Fantasma, desactiva el modo mover,
     * actualiza la barra de estado y el cursor.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonFantasmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonFantasmaActionPerformed
        // Establezco el tipo de forma a dibujar como Fantasma
        this.lienzo2D.setTipoforma(Lienzo2D.tipoOpcion.FANTASMA);
        
        // Pongo a false mover para poder dibujar
        this.lienzo2D.setMover(false);
        
        // Actualizo la barra de estado para que indique que se esta dibujando un Fantasma
        BarraEstado.setText("Dibujando Fantasma...");
        
        // Establecemos el nuevo cursor
        lienzo2D.setCursor(cursorPintar);
    }//GEN-LAST:event_BotonFantasmaActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Mover". Activa o
     * desactiva el modo mover, actualiza la barra de estado y el cursor.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMoverActionPerformed
        // Compruebo si esta seleccionado o no Mover
        boolean Mover = BotonMover.isSelected();
        
        // Asigno el bool a Mover
        this.lienzo2D.setMover(Mover);
        
        // Establecemos el nuevo cursor
        lienzo2D.setCursor(cursorMover);
    }//GEN-LAST:event_BotonMoverActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Relleno". Activa o
     * desactiva el relleno de la forma, y actualiza la barra de estado.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRellenoActionPerformed
        // Compruebo si esta seleccionado o no Relleno
        boolean Relleno = BotonRelleno.isSelected();
        
        // Asigno el bool a Relleno
        this.lienzo2D.setRelleno(Relleno);
        
        // Actualizo la barra de estado para que indique que se ha rellenado el dibujo
        BarraEstado.setText("Dibujo rellenado...");
    }//GEN-LAST:event_BotonRellenoActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Transparencia".
     * Activa o desactiva la transparencia de la forma, y actualiza la barra de
     * estado.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonTransparenciaActionPerformed
        // Compruebo si esta seleccionado o no Transparencia
        boolean Transparencia = BotonTransparencia.isSelected();
        
        // Asigno el bool a Transparencia
        this.lienzo2D.setTransparencia(Transparencia);
        
        // Actualizo la barra de estado para que indique que se ha aplicado la transparencia al dibujo
        BarraEstado.setText("Transparencia aplicada...");
    }//GEN-LAST:event_BotonTransparenciaActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Alisar". Activa o
     * desactiva el alisado de la forma, y actualiza la barra de estado.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAlisarActionPerformed
        // Compruebo si esta seleccionado o no Alisar
        boolean Alisado = BotonAlisar.isSelected();
        
        // Asigno el bool a Alisar
        this.lienzo2D.setAlisado(Alisado);
        
        // Actualizo la barra de estado para que indique que se ha aplicado el alisado al dibujo
        BarraEstado.setText("Alisado aplicado...");
    }//GEN-LAST:event_BotonAlisarActionPerformed
    /**
     * Este método se ejecuta cuando se presiona el botón "Color". Abre el
     * selector de color, actualiza el color del botón y asigna el color
     * seleccionado para los dibujos.
     *
     * @param evt El evento de acción del botón
     */
    private void BotonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonColorActionPerformed
        // Abre el menu de seleccion de color
        Color color = JColorChooser.showDialog(this, "Elije un color", Color.RED);
        
        // Actualizo el background que muestra el boton con el color elegido
        this.BotonColor.setBackground(color);
        
        // Asigno el color que se aplicara a los dibujos
        this.lienzo2D.setColor(color);
    }//GEN-LAST:event_BotonColorActionPerformed
    /**
     * Este método se ejecuta cuando se cambia el valor del selector de grosor.
     * Actualiza el grosor de las formas y actualiza la barra de estado.
     *
     * @param evt El evento de cambio del selector
     */
    private void SelectorGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SelectorGrosorStateChanged
        // Convierto el valor del slider a un entero para dar valor al grosor
        int grosor = this.SelectorGrosor.getValue();
        
        // Le asigno el grosor 
        this.lienzo2D.setGrosor(grosor);
        
        // Actualizo la barra de estado para que indique que se ha aplicado el grosor asignado
        BarraEstado.setText("Aplicando un Grsor de un..." + grosor +"%" );
    }//GEN-LAST:event_SelectorGrosorStateChanged

    private void lienzo2DMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo2DMouseMoved
        // Obtén las coordenadas del puntero
        int x = evt.getX();
        int y = evt.getY();

        // Actualiza la barra de estado
        BarraEstado.setText("Coordenadas del puntero: ( x:" + x + ", y:" + y + ")");
    }//GEN-LAST:event_lienzo2DMouseMoved

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BarraEstado;
    private javax.swing.JToggleButton BotonAlisar;
    private javax.swing.JButton BotonColor;
    private javax.swing.JToggleButton BotonElipse;
    private javax.swing.JToggleButton BotonFantasma;
    private javax.swing.JToggleButton BotonLinea;
    private javax.swing.JToggleButton BotonMover;
    private javax.swing.JToggleButton BotonRectangulo;
    private javax.swing.JToggleButton BotonRelleno;
    private javax.swing.JToggleButton BotonTransparencia;
    private javax.swing.ButtonGroup MenuBotones;
    private javax.swing.JToolBar MenuDibujos;
    private javax.swing.JPanel PanelBarraEstado;
    private javax.swing.JPanel PanelBotonColores;
    private javax.swing.JSlider SelectorGrosor;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private sm.arc.iu.Lienzo2D lienzo2D;
    // End of variables declaration//GEN-END:variables
}
